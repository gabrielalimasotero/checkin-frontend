console.log('üîß Corrigindo pol√≠ticas RLS...');
console.log('============================');
console.log('');

console.log('‚ùå Problema identificado: "new row violates row-level security policy"');
console.log('üí° As pol√≠ticas RLS est√£o impedindo a inser√ß√£o de usu√°rios.');
console.log('');

console.log('üìã SQL para corrigir as pol√≠ticas:');
console.log('==================================');
console.log('');

const fixRLSSQL = `
-- =====================================================
-- CORRE√á√ÉO DAS POL√çTICAS RLS
-- =====================================================

-- Remover pol√≠ticas existentes que podem estar causando conflito
DROP POLICY IF EXISTS "Users can view own profile" ON public.users;
DROP POLICY IF EXISTS "Users can update own profile" ON public.users;
DROP POLICY IF EXISTS "Users can insert own profile" ON public.users;

-- Criar pol√≠ticas corretas
CREATE POLICY "Users can view own profile" ON public.users 
FOR SELECT USING (auth.uid() = id);

CREATE POLICY "Users can update own profile" ON public.users 
FOR UPDATE USING (auth.uid() = id);

CREATE POLICY "Users can insert own profile" ON public.users 
FOR INSERT WITH CHECK (auth.uid() = id);

-- Pol√≠ticas para checkins
DROP POLICY IF EXISTS "Checkins are viewable by everyone" ON public.checkins;
DROP POLICY IF EXISTS "Users can create own checkins" ON public.checkins;
DROP POLICY IF EXISTS "Users can update own checkins" ON public.checkins;

CREATE POLICY "Checkins are viewable by everyone" ON public.checkins 
FOR SELECT USING (true);

CREATE POLICY "Users can create own checkins" ON public.checkins 
FOR INSERT WITH CHECK (auth.uid() = user_id);

CREATE POLICY "Users can update own checkins" ON public.checkins 
FOR UPDATE USING (auth.uid() = user_id);

-- Pol√≠ticas para venues
DROP POLICY IF EXISTS "Venues are viewable by everyone" ON public.venues;

CREATE POLICY "Venues are viewable by everyone" ON public.venues 
FOR SELECT USING (true);

-- Pol√≠ticas para groups
DROP POLICY IF EXISTS "Public groups are viewable by everyone" ON public.groups;
DROP POLICY IF EXISTS "Users can create groups" ON public.groups;

CREATE POLICY "Public groups are viewable by everyone" ON public.groups 
FOR SELECT USING (is_public = true);

CREATE POLICY "Users can create groups" ON public.groups 
FOR INSERT WITH CHECK (auth.uid() = created_by);

-- Pol√≠ticas para interests
DROP POLICY IF EXISTS "Interests are viewable by everyone" ON public.interests;

CREATE POLICY "Interests are viewable by everyone" ON public.interests 
FOR SELECT USING (true);

-- Pol√≠ticas para user_interests
DROP POLICY IF EXISTS "Users can manage own interests" ON public.user_interests;

CREATE POLICY "Users can manage own interests" ON public.user_interests 
FOR ALL USING (auth.uid() = user_id);
`;

console.log(fixRLSSQL);

console.log('');
console.log('üéØ Como aplicar:');
console.log('1. V√° para Supabase Dashboard ‚Üí SQL Editor');
console.log('2. Clique em "New Query"');
console.log('3. Cole o c√≥digo acima');
console.log('4. Clique em "Run"');
console.log('');
console.log('5. Teste novamente: npm run test-insert');
console.log('6. Teste o bot√£o "Criar Conta" no app');
console.log('');

console.log('üí° Explica√ß√£o:');
console.log('- As pol√≠ticas RLS estavam impedindo a inser√ß√£o de usu√°rios');
console.log('- Agora os usu√°rios podem inserir seus pr√≥prios perfis');
console.log('- As pol√≠ticas garantem que cada usu√°rio s√≥ acesse seus pr√≥prios dados'); 